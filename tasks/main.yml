---
- name: install python and devel. packages for venv setup
  apt: name="{{ item }}"
  with_items:
    - "python{{ py_ver }}"
    - "python{{ py_ver }}-dev"
    - "python{{ py_ver }}-virtualenv"
    - git
    - postgresql-server-dev-all
    - build-essential
    - libpq-dev
  become: true
  tags: superuser

- name: pull application from repo
  git:
    repo: "{{ git_repo }}"
    version: "{{ branch }}"
    accept_hostkey: True
    dest: "{{ app_path }}"
    recursive: yes
    force: yes
  register: git

- name: configure django settings
  template:
    src: "{{ settings_tpl }}"
    dest: "{{ django_settings_path }}"

- name: check venv dir
  stat: path="{{ venv_path }}"
  register: venv_dir_stat

- name: create initial venv
  shell: "virtualenv {{ venv_path }} -p /usr/bin/python{{ py_ver }}"
  when: not venv_dir_stat.stat.exists or force_venv

- name: configure venv
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings_module }}"
  pip:
    virtualenv: "{{ venv_path }}"
    virtualenv_command: "virtualenv"
    requirements: "{{ requirements_path }}"
  when: git.changed or force_venv

- name: run manage.py
  django_manage:
    command: "{{ item }}"
    app_path: "{{ app_path }}"
    virtualenv: "{{ venv_path }}"
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings_module }}"
  ignore_errors: yes
  with_items:
    - compilemessages
    - collectstatic
    - migrate
  when: git.changed or force_manage
  notify: "reload app"

- name: load fixtures
  django_manage:
    command: loaddata
    app_path: "{{ app_path }}"
    virtualenv: "{{ venv_path }}"
    fixtures: "{{ fixtures|join(' ') }}"
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings_module }}"
  when: fixtures is defined
