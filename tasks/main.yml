---
- name: install python and devel. packages for venv setup
  apt: name="{{ item }}"
  with_items:
    - "python{{ py_package_suf }}"
    - "python{{ py_package_suf }}-dev"
    - "python{{ py_package_suf }}-virtualenv"
    - git
    - postgresql-server-dev-all
    - build-essential
    - libpq-dev
    - virtualenv
    - gettext
  become: true
  tags: superuser
  when: ansible_connection != 'docker'

- name: install python and devel. packages for venv setup
  apt: name="{{ item }}"
  with_items:
    - "python{{ py_package_suf }}"
    - "python{{ py_package_suf }}-dev"
    - "python{{ py_package_suf }}-virtualenv"
    - git
    - postgresql-server-dev-all
    - build-essential
    - libpq-dev
  remote_user: root
  tags: superuser
  when: ansible_connection == 'docker'

- name: pull application from repo
  git:
    repo: "{{ git_repo }}"
    version: "{{ branch }}"
    accept_hostkey: True
    dest: "{{ app_path }}"
    recursive: yes
    force: yes
  register: git
  when: git_repo is defined
  notify: "reload app"
  tags: upgrade

- name: configure django settings
  template:
    src: "{{ settings_tpl }}"
    dest: "{{ django_settings_path }}"
  when: settings_tpl is defined

- name: configure venv
  pip:
    virtualenv: "{{ venv_path }}"
    virtualenv_python: 'python{{ py_ver }}'
    requirements: "{{ requirements_path }}"
  when: (git is defined and git.changed) or force_venv or git_repo is undefined
  tags: upgrade

- block:
  - name: run manage.py
    django_manage:
      command: "{{ item }}"
      app_path: "{{ app_path }}"
      virtualenv: "{{ venv_path }}"
    with_items:
      - compilemessages
      - collectstatic
      - syncdb
      - migrate
    when: (git is defined and git.changed) or force_manage or git_repo is undefined

  - name: run additional manage.py commands
    django_manage:
      command: "{{ item }}"
      app_path: "{{ app_path }}"
      virtualenv: "{{ venv_path }}"
    with_items: '{{ additional_commands|default([]) }}'

  - name: load fixtures
    django_manage:
      command: loaddata
      app_path: "{{ app_path }}"
      virtualenv: "{{ venv_path }}"
      fixtures: "{{ fixtures|join(' ') }}"
    when: fixtures is defined and fixtures|length > 0

  ignore_errors: yes
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings_module }}"
  tags: upgrade
